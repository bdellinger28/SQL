# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 
#1. View the table.
SELECT *
FROM BIT_DB.Spotifydata;

#2. Query the top 5 most popular songs.
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC 
LIMIT 5;

#3. Find find the 5 longest songs.
SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
GROUP BY track_name, artist_name
ORDER BY duration_ms DESC
LIMIT 5;

#4. View the average popularity, danceability, and energy of the songs.
SELECT artist_name,track_name,avg(popularity),avg(danceability),avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#5. Which artists have multiple songs on the top 50 list?
SELECT artist_name, Count(artist_name)
FROM Spotifydata
GROUP BY artist_name
HAVING Count(artist_name) >1
ORDER BY Count(artist_name) DESC;

#6. Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
#I utilized a CTE table for this.
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name)
 
SELECT artist_name,average_popularity,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;

#7. Categorize the songs based on their "vibe," energy and danceability.
SELECT track_name, 
CASE WHEN energy > .8 OR danceability > .75 THEN 'Ay, Its a Party'
WHEN energy > .6 OR danceability > .65 THEN 'Lets Boogie'
ELSE 'Maybe just sing along'
END AS Vibe
FROM Spotifydata
ORDER BY Vibe;      
